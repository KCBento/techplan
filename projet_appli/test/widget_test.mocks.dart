// Mocks generated by Mockito 5.4.4 from annotations
// in mon_agenda/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:mon_agenda/agenda_app.dart' as _i5;
import 'package:mon_agenda/database.dart' as _i3;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i4.Future<_i2.Database>);

  @override
  _i4.Future<void> resetTechnicianLoginStatus() => (super.noSuchMethod(
        Invocation.method(
          #resetTechnicianLoginStatus,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<dynamic> insertInitialData(_i2.Database? db) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertInitialData,
          [db],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getTechnicians() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTechnicians,
          [],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<bool> checkConnection(
    String? login,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkConnection,
          [
            login,
            password,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<List<_i5.Intervention>> fetchInterventionsForTechnician(
          int? technicianId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchInterventionsForTechnician,
          [technicianId],
        ),
        returnValue:
            _i4.Future<List<_i5.Intervention>>.value(<_i5.Intervention>[]),
      ) as _i4.Future<List<_i5.Intervention>>);

  @override
  _i4.Future<void> updateTechnicianLoginStatus(int? technicianId) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTechnicianLoginStatus,
          [technicianId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getTechnicianId() => (super.noSuchMethod(
        Invocation.method(
          #getTechnicianId,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> getTechnicianIdByCredentials(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTechnicianIdByCredentials,
          [
            username,
            password,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<String> getTechnicianName() => (super.noSuchMethod(
        Invocation.method(
          #getTechnicianName,
          [],
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #getTechnicianName,
            [],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<int> addIntervention(
    int? technicianId,
    _i5.Intervention? intervention,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addIntervention,
          [
            technicianId,
            intervention,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> updateIntervention(_i5.Intervention? intervention) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateIntervention,
          [intervention],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteIntervention(_i5.Intervention? intervention) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteIntervention,
          [intervention],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateStatutIntervention(_i5.Intervention? intervention) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStatutIntervention,
          [intervention],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
